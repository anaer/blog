<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Tip</title><link>https://anaer.github.io/blog</link><description>闲言碎语</description><copyright>Tip</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://avatars.githubusercontent.com/u/4637100?s=400&amp;v=4</url><title>avatar</title><link>https://anaer.github.io/blog</link></image><lastBuildDate>Wed, 25 Dec 2024 01:57:22 +0000</lastBuildDate><managingEditor>Tip</managingEditor><pubDate>Wed, 25 Dec 2024 01:57:22 +0000</pubDate><ttl>60</ttl><webMaster>Tip</webMaster><item><title>Linux抓包tcp数据</title><link>https://anaer.github.io/blog/post/Linux-zhua-bao-tcp-shu-ju.html</link><description>```sh&#13;
tcpdump tcp port 22 and host 1.1.1.1 -w ./output.cap&#13;
```&#13;
&#13;
1) tcp 过滤数据包的类型 &#13;
2) port 目标端口 &#13;
3) host 目标主机 &#13;
4) -w ./output.cap 输出cap文件, 可用[wireshark](https://www.wireshark.org/download.html)打开分析 。</description><guid isPermaLink="true">https://anaer.github.io/blog/post/Linux-zhua-bao-tcp-shu-ju.html</guid><pubDate>Tue, 24 Dec 2024 07:09:16 +0000</pubDate></item><item><title>Python telegram消息发送</title><link>https://anaer.github.io/blog/post/Python%20telegram-xiao-xi-fa-song.html</link><description>&#13;
[telegram-bot文档](https://docs.python-telegram-bot.org/en/stable/telegram.bot.html#telegram.Bot.send_message)。</description><guid isPermaLink="true">https://anaer.github.io/blog/post/Python%20telegram-xiao-xi-fa-song.html</guid><pubDate>Fri, 13 Dec 2024 09:47:33 +0000</pubDate></item><item><title>Spotify导入opml</title><link>https://anaer.github.io/blog/post/Spotify-dao-ru-opml.html</link><description>## [Podimporter](https://www.podimporter.com)&#13;
&#13;
在线导入opml, 需要登录Spotify, 然后选择opml文件导入。</description><guid isPermaLink="true">https://anaer.github.io/blog/post/Spotify-dao-ru-opml.html</guid><pubDate>Fri, 13 Dec 2024 07:47:26 +0000</pubDate></item><item><title>静态文件服务器</title><link>https://anaer.github.io/blog/post/jing-tai-wen-jian-fu-wu-qi.html</link><description>[dufs](https://github.com/sigoden/dufs)&#13;
![220513063-ff0f186b-ac54-4682-9af4-47a9781dee0d](https://github.com/user-attachments/assets/dee71768-2086-489e-a87d-871a06d07e87)&#13;
&#13;
[miniserve](https://github.com/svenstaro/miniserve)&#13;
&lt;img width="425" alt="screenshot" src="https://github.com/user-attachments/assets/ad9d97aa-0ef3-4e67-b5e0-f60841220b9c"&gt;&#13;
&#13;
[chfsgui](https://github.com/docblue/chfsgui)&#13;
![image](https://github.com/user-attachments/assets/550870b3-2a10-4351-8876-069a5fb8af38)&#13;
。</description><guid isPermaLink="true">https://anaer.github.io/blog/post/jing-tai-wen-jian-fu-wu-qi.html</guid><pubDate>Wed, 21 Aug 2024 07:05:12 +0000</pubDate></item><item><title>neovim gui客户端</title><link>https://anaer.github.io/blog/post/neovim%20gui-ke-hu-duan.html</link><description>## [goneovim](https://github.com/akiyosi/goneovim)&#13;
单文件 刚安装 测试看看&#13;
&#13;
## [neovide](https://github.com/neovide/neovide)&#13;
单文件 光标切换响应较慢 有残影 暂不考虑&#13;
&#13;
## [fvim](https://github.com/yatli/fvim)&#13;
dll库文件较多 先不考虑。</description><guid isPermaLink="true">https://anaer.github.io/blog/post/neovim%20gui-ke-hu-duan.html</guid><pubDate>Tue, 06 Aug 2024 06:37:03 +0000</pubDate></item><item><title>Deeplx 负载均衡</title><link>https://anaer.github.io/blog/post/Deeplx%20-fu-zai-jun-heng.html</link><description>http://47.236.84.103:3000/translate&#13;
&#13;
~~https://deeplx-lb-wheat.vercel.app/translate~~&#13;
&#13;
https://deeplx.smnet.io/translate &#13;
&#13;
## 支持deeplx的软件和扩展插件&#13;
&#13;
沉浸式翻译 &#13;
&#13;
语言学家 - 网页翻译器 &#13;
&#13;
pot。</description><guid isPermaLink="true">https://anaer.github.io/blog/post/Deeplx%20-fu-zai-jun-heng.html</guid><pubDate>Thu, 01 Aug 2024 07:59:09 +0000</pubDate></item><item><title>aidoku源</title><link>https://anaer.github.io/blog/post/aidoku-yuan.html</link><description>在设置-来源列表中添加&#13;
&#13;
https://raw.githubusercontent.com/suiyuran/aidoku-zh-sources/main/public&#13;
https://raw.githubusercontent.com/Skittyblock/aidoku-community-sources/gh-pages/。</description><guid isPermaLink="true">https://anaer.github.io/blog/post/aidoku-yuan.html</guid><pubDate>Sat, 20 Jul 2024 13:44:01 +0000</pubDate></item><item><title>Windows内存清理工具</title><link>https://anaer.github.io/blog/post/Windows-nei-cun-qing-li-gong-ju.html</link><description>Windows Memory Cleaner 2.8&#13;
https://github.com/IgorMundstein/WinMemoryCleaner/&#13;
&#13;
Mem Reduct&#13;
https://github.com/henrypp/memreduct&#13;
&#13;
![image](https://github.com/anaer/Gmeek/assets/4637100/4bc23111-d33e-45da-be1e-24d81de37ea9)&#13;
。</description><guid isPermaLink="true">https://anaer.github.io/blog/post/Windows-nei-cun-qing-li-gong-ju.html</guid><pubDate>Thu, 23 May 2024 01:19:22 +0000</pubDate></item><item><title>生成Python项目的requirements.txt文件</title><link>https://anaer.github.io/blog/post/sheng-cheng-Python-xiang-mu-de-requirements.txt-wen-jian.html</link><description>生成 Python 项目的 requirements.txt 文件&#13;
&#13;
1. 使用 `pip freeze` 命令。</description><guid isPermaLink="true">https://anaer.github.io/blog/post/sheng-cheng-Python-xiang-mu-de-requirements.txt-wen-jian.html</guid><pubDate>Thu, 07 Dec 2023 05:36:55 +0000</pubDate></item><item><title>检测服务器内存信息, 并用bark通知</title><link>https://anaer.github.io/blog/post/jian-ce-fu-wu-qi-nei-cun-xin-xi-%2C%20-bing-yong-bark-tong-zhi.html</link><description>vim script/free.py&#13;
&#13;
```py&#13;
import subprocess&#13;
from bark import send_bark_notification&#13;
&#13;
# 执行 free -m 命令并获取结果&#13;
result = subprocess.run(['free', '-m'], stdout=subprocess.PIPE)&#13;
&#13;
# 处理结果并提取 total 和 available 两项&#13;
lines = result.stdout.decode().split('\n')&#13;
headers = lines[0].split()&#13;
values = lines[1].split()&#13;
&#13;
# 提取 total 和 available 两项&#13;
total = values[headers.index('total')+1]&#13;
available = values[headers.index('available')+1]&#13;
&#13;
# 打印结果&#13;
content = f"Total Memory: {total} MB \nAvailable Memory: {available} MB"&#13;
#print(content)&#13;
send_bark_notification("服务器内存信息", content)&#13;
&#13;
```&#13;
&#13;
&#13;
`crontab -e`  配置定时任务&#13;
&#13;
```&#13;
# 每小时通知服务器内存信息&#13;
0 * * * * python3 script/free.py&#13;
```&#13;
&#13;
。</description><guid isPermaLink="true">https://anaer.github.io/blog/post/jian-ce-fu-wu-qi-nei-cun-xin-xi-%2C%20-bing-yong-bark-tong-zhi.html</guid><pubDate>Wed, 08 Nov 2023 09:38:20 +0000</pubDate></item><item><title>使用bark通知APP</title><link>https://anaer.github.io/blog/post/shi-yong-bark-tong-zhi-APP.html</link><description>```py&#13;
import requests&#13;
import sys&#13;
from urllib.parse import quote&#13;
&#13;
# Bark 的通知 API xxx为token信息&#13;
BARK_API = "https://api.day.app/xxx"&#13;
&#13;
def send_bark_notification(param1, param2):&#13;
 # quote默认safe='/', 不进行处理, 如需处理将safe置空&#13;
 title = quote(param1, safe="")&#13;
 content = quote(param2, safe="")&#13;
 print(title, content)&#13;
 url = f"{BARK_API}/{title}/{content}"&#13;
 print(url)&#13;
 response = requests.get(url)&#13;
 if response.status_code == 200:&#13;
     print("发送 Bark 通知成功")&#13;
 else:&#13;
     print(f"发送 Bark 通知失败: {response.text}")&#13;
&#13;
if __name__ == "__main__":&#13;
 if len(sys.argv) &gt; 2:&#13;
     title = sys.argv[1]&#13;
     content = sys.argv[2]&#13;
     send_bark_notification(title, content)&#13;
```。</description><guid isPermaLink="true">https://anaer.github.io/blog/post/shi-yong-bark-tong-zhi-APP.html</guid><pubDate>Wed, 08 Nov 2023 09:28:30 +0000</pubDate></item><item><title>fail2ban配置nginx</title><link>https://anaer.github.io/blog/post/fail2ban-pei-zhi-nginx.html</link><description>vim /etc/fail2ban/jail.d/nginx.conf&#13;
&#13;
```conf&#13;
[nginx-cc]&#13;
enabled = true&#13;
filter = nginx-cc&#13;
action = iptables-multiport[name=nginx-cc,port="80,443"]&#13;
         bark[name=nginx-cc]&#13;
maxretry = 120&#13;
findtime = 60s&#13;
bantime = 2d&#13;
logpath = /var/log/nginx/access.log&#13;
&#13;
[nginx-404]&#13;
enabled = true&#13;
filter = nginx-404&#13;
action = iptables-multiport[name=nginx-404,port="80,443"]&#13;
         bark[name=nginx-404]&#13;
maxretry = 3&#13;
findtime = 60s&#13;
bantime = 1d&#13;
logpath = /var/log/nginx/access.log&#13;
&#13;
[nginx-http-auth]&#13;
enabled = true&#13;
filter = nginx-http-auth&#13;
action = iptables-multiport[name=nginx-http-auth,port="80,443"]&#13;
         bark[name=nginx-http-auth]&#13;
logpath = /var/log/nginx/access.log&#13;
&#13;
```&#13;
&#13;
vim /etc/fail2ban/filter.d/nginx-cc.conf&#13;
&#13;
```conf&#13;
[Definition]&#13;
failregex = &lt;HOST&gt; -.*- .*HTTP/1.* .* .*$&#13;
ignoreregex = .*(robots.txt|favicon.ico)&#13;
```&#13;
&#13;
vim /etc/fail2ban/filter.d/nginx-404.conf&#13;
&#13;
```conf&#13;
[Definition]&#13;
failregex = &lt;HOST&gt; -.*- .*HTTP/1.* 404 .*$&#13;
ignoreregex = .*(robots.txt|favicon.ico)&#13;
```&#13;
&#13;
nginx-http-auth 为自带规则&#13;
&#13;
1. #9 &#13;
。</description><guid isPermaLink="true">https://anaer.github.io/blog/post/fail2ban-pei-zhi-nginx.html</guid><pubDate>Mon, 06 Nov 2023 07:35:40 +0000</pubDate></item><item><title>Ubuntu安装fail2ban</title><link>https://anaer.github.io/blog/post/Ubuntu-an-zhuang-fail2ban.html</link><description>## 安装&#13;
系统: Ubuntu 20.04.6 LTS&#13;
&#13;
```bash&#13;
apt-get install fail2ban&#13;
```&#13;
&#13;
## 命令&#13;
&#13;
### 查询服务状态&#13;
&#13;
```bash&#13;
service fail2ban status&#13;
systemctl status fail2ban.service&#13;
```&#13;
&#13;
### 查询状态&#13;
&#13;
```bash&#13;
# 查看启用的规则&#13;
# fail2ban-client status&#13;
Status&#13;
|- Number of jail:      1&#13;
`- Jail list:   sshd&#13;
&#13;
# 查看规则详情&#13;
# fail2ban-client status sshd&#13;
Status for the jail: sshd&#13;
|- Filter&#13;
|  |- Currently failed: 0&#13;
|  |- Total failed:     0&#13;
|  `- File list:        /var/log/auth.log&#13;
`- Actions&#13;
   |- Currently banned: 0&#13;
   |- Total banned:     0&#13;
   `- Banned IP list:&#13;
&#13;
# 重新加载配置&#13;
# fail2ban-client reload&#13;
&#13;
# 重新加载单个配置&#13;
# fail2ban-client reload sshd&#13;
&#13;
# 手动解禁IP&#13;
# fail2ban-client set sshd unbanip 192.168.1.1&#13;
```&#13;
&#13;
## 配置&#13;
&#13;
配置目录: `/etc/fail2ban`&#13;
&#13;
修改sshd配置&#13;
/etc/fail2ban/jail.d/sshd.conf&#13;
&#13;
```bash&#13;
[sshd]&#13;
enabled = true&#13;
mode   = normal&#13;
port    = ssh&#13;
filter  = sshd&#13;
banaction = iptables&#13;
            bark[name=sshd]&#13;
backend = systemd&#13;
maxretry = 2&#13;
findtime = 1d&#13;
bantime = 2w&#13;
ignoreip = 127.0.0.1/8&#13;
logpath = %(sshd_log)s&#13;
#backend = %(sshd_backend)s&#13;
```&#13;
&#13;
添加bark.conf自定义action&#13;
```bash&#13;
vim /etc/fail2ban/action.d/bark.conf&#13;
```&#13;
&#13;
```bash&#13;
[Definition]&#13;
norestored = 1&#13;
actionban   = /usr/bin/python3 /root/script/bark.py fail2ban-&lt;name&gt; &lt;ip&gt;&#13;
actionunban =&#13;
actioncheck =&#13;
actionstart =&#13;
actionstop =&#13;
&#13;
[Init]&#13;
&#13;
name = default&#13;
blocktype = unreachable&#13;
```&#13;
&#13;
## 参考链接&#13;
&#13;
[Fail2Ban 教程](https://github.com/wangdoc/ssh-tutorial/blob/main/docs/fail2ban.md)&#13;
使用bark通知app #11 。</description><guid isPermaLink="true">https://anaer.github.io/blog/post/Ubuntu-an-zhuang-fail2ban.html</guid><pubDate>Fri, 03 Nov 2023 05:59:18 +0000</pubDate></item><item><title>Ubuntu部署WebDAV服务</title><link>https://anaer.github.io/blog/post/Ubuntu-bu-shu-WebDAV-fu-wu.html</link><description>0. 系统环境&#13;
&#13;
系统: Ubuntu 20.04.6&#13;
&#13;
1. 安装nginx&#13;
&#13;
`apt-get install nginx-full` 安装full版&#13;
&#13;
2. 创建webdav目录&#13;
&#13;
```bash&#13;
mkdir /var/www/webdav&#13;
chown -R www-data:www-data /var/www/webdav&#13;
```&#13;
&#13;
3. 配置nginx&#13;
&#13;
`vim /etc/nginx/sites-available/default`&#13;
&#13;
在 `server` 块内添加以下配置:&#13;
```bash&#13;
location /webdav {&#13;
    # 指定webdav的根目录&#13;
    root /var/www/;&#13;
    # dav允许的操作&#13;
    dav_methods PUT DELETE MKCOL COPY MOVE;&#13;
    dav_ext_methods PROPFIND OPTIONS;&#13;
    # 允许自动创建文件夹&#13;
    create_full_put_path on;&#13;
    # 创建文件的默认权限&#13;
    dav_access user:rw group:rw all:r;&#13;
    # 用户密码文件&#13;
    auth_basic "WebDAV";&#13;
    auth_basic_user_file /etc/nginx/.htpasswd;&#13;
    # 临时文件位置&#13;
    client_body_temp_path /tmp;&#13;
    # 开启目录浏览功能, 如果未开启 访问会提示`403 Forbidden`&#13;
    autoindex on;&#13;
    # 文件大小限制1G&#13;
    client_max_body_size 1G;&#13;
}&#13;
```&#13;
&#13;
4. 用户认证&#13;
&#13;
创建用户username, 根据提示输入密码并确认.&#13;
&#13;
```bash&#13;
apt-get install apache2-utils&#13;
htpasswd -c /etc/nginx/.htpasswd username&#13;
```&#13;
&#13;
5. 启动服务&#13;
&#13;
```bash&#13;
nginx -t # 检查配置&#13;
nginx -s reload # 重载配置&#13;
```&#13;
&#13;
&#13;
6. 访问服务&#13;
&#13;
`http://xxx.xxx.xxx.xxx/webdav`&#13;
&#13;
&#13;
## 相关链接&#13;
[htpasswd命令介绍](https://ipcmen.com/htpasswd)。</description><guid isPermaLink="true">https://anaer.github.io/blog/post/Ubuntu-bu-shu-WebDAV-fu-wu.html</guid><pubDate>Wed, 01 Nov 2023 07:30:57 +0000</pubDate></item><item><title>ECS操作记录</title><link>https://anaer.github.io/blog/post/ECS-cao-zuo-ji-lu.html</link><description>1. 重置密码， 没有提示默认密码&#13;
2. `apt-get update` 需要先更新, 直接安装会提示找不到包&#13;
3. `apt-get install nginx` 安装nginx &#13;
4. 云服务 安全组 入方向 快速添加80端口 &#13;
5. 部署webdav #8 &#13;
6. 安装fail2ban 防止暴力破解系统密码 #9 &#13;
7. 安装[deepLX](https://github.com/OwO-Network/DeepLX)。</description><guid isPermaLink="true">https://anaer.github.io/blog/post/ECS-cao-zuo-ji-lu.html</guid><pubDate>Wed, 01 Nov 2023 02:37:56 +0000</pubDate></item><item><title>Windows10装机软件</title><link>https://anaer.github.io/blog/post/Windows10-zhuang-ji-ruan-jian.html</link><description>| 名称                      | 下载地址                                                     | 说明       |&#13;
|-------------------------|------------------------------------------------------------|----------|&#13;
| weasel小狼毫输入法          | [官网](https://rime.im/)                                    |          |&#13;
| Git                      | [官网](https://git-scm.com/download)                        |          |&#13;
| WeCom企业微信              | [官网](https://work.weixin.qq.com/)                          |          |&#13;
| VSCode                   | [官网](https://code.visualstudio.com/)                       |          |&#13;
| python 3.12.0            | [华为云镜像](https://mirrors.huaweicloud.com/python/3.12.0/)      |          |&#13;
| Everything               | [官网](https://www.voidtools.com/zh-cn/)                     |          |&#13;
| 7zip                     | [官网](https://sparanoid.com/lab/7z/)                        |          |&#13;
| JDK8                     | [官网](https://www.oracle.com/java/technologies/downloads/#java8-windows) |          |&#13;
| Maven                    | [阿里云镜像](https://mirrors.aliyun.com/apache/maven/maven-3/3.9.5/binaries/) |          |&#13;
| JDK17                    | [官网](https://www.oracle.com/java/technologies/downloads/#jdk17-windows) |          |&#13;
| NodeJS                   | [官网](http://www.nodejs.com.cn/)                            |          |&#13;
| Putty                    | [阿里云镜像](https://mirrors.aliyun.com/putty/latest.html)         |          |&#13;
| LibreOffice              | [腾讯云镜像](https://mirrors.cloud.tencent.com/libreoffice/libreoffice/stable/) |          |&#13;
| Charles                  | [官网](https://www.charlesproxy.com/latest-release/download.do) |          |&#13;
| Proxifier                | [官网](http://www.proxifier.com/)                            |          |&#13;
| MultiCommander           | [官网](http://multicommander.com/downloads)                  |          |&#13;
| WinSCP                   | [官网](https://winscp.net/eng/download.php)                  |          |&#13;
| Cmder终端工具              | [GitHub](https://github.com/cmderdev/cmder/releases)           |          |&#13;
| fastcopy快速拷贝工具         | [官网](https://fastcopy.jp/)                                 |          |&#13;
| HeidiSQL开源数据库客户端     | [官网](https://www.heidisql.com/)                            |          |&#13;
| Wise Memory Optimizer | [官网](https://www.wisecleaner.com.cn/wise-memory-optimizer.html)| Windows 内存整理和优化工具|&#13;
|未使用|---|---|&#13;
| Windows Memory Cleaner 2.8 | [GitHub](https://github.com/IgorMundstein/WinMemoryCleaner/)  |      |&#13;
| BleachBit 清理工具          | [官网](https://www.bleachbit.org/)                           |      |&#13;
| SwitchHosts              | [GitHub](https://github.com/oldj/SwitchHosts/releases)         |      |&#13;
| Mem Reduct          | [GitHub](https://github.com/henrypp/memreduct)                 |    内存释放, Q:偶尔选项置灰      |。</description><guid isPermaLink="true">https://anaer.github.io/blog/post/Windows10-zhuang-ji-ruan-jian.html</guid><pubDate>Mon, 30 Oct 2023 09:01:28 +0000</pubDate></item><item><title>中文等宽字体</title><link>https://anaer.github.io/blog/post/zhong-wen-deng-kuan-zi-ti.html</link><description>* [LXGW WenKai GB / 霞鹜文楷 GB](https://github.com/lxgw/LxgwWenkaiGB)&#13;
等宽, markdown表格格式化 也能对齐&#13;
&#13;
* [Cascadia Code](https://github.com/microsoft/cascadia-code)&#13;
* [Maple-Mono](https://github.com/subframe7536/Maple-font)&#13;
* [UbuntuMono](https://github.com/powerline/fonts/tree/master/UbuntuMono)。</description><guid isPermaLink="true">https://anaer.github.io/blog/post/zhong-wen-deng-kuan-zi-ti.html</guid><pubDate>Thu, 26 Oct 2023 02:37:30 +0000</pubDate></item><item><title>pyGitHub</title><link>https://anaer.github.io/blog/post/pyGitHub.html</link><description>## 仓库属性字段&#13;
&#13;
| 属性字段         | 描述                          |&#13;
|------------------|-------------------------------|&#13;
| id               | 仓库的唯一标识符               |&#13;
| name             | 仓库的名称                    |&#13;
| full_name        | 仓库的全名，包括用户名/组织名   |&#13;
| owner            | 仓库的所有者（用户或组织）     |&#13;
| description      | 仓库的描述                    |&#13;
| created_at       | 仓库创建的时间                |&#13;
| updated_at       | 仓库最后更新的时间            |&#13;
| pushed_at        | 仓库最后推送的时间            |&#13;
| language         | 仓库主要使用的编程语言         |&#13;
| forks_count      | 仓库的分支数量                |&#13;
| stargazers_count | 仓库的星标数（收藏数）        |&#13;
| watchers_count   | 仓库的关注者数                |&#13;
| size             | 仓库的大小（以字节为单位）    |&#13;
| html_url         | 仓库的在 GitHub 网站上的链接  |&#13;
| default_branch   | 仓库的默认分支                |&#13;
| homepage          | 仓库的主页链接                |&#13;
| license          | 仓库的许可证信息              |&#13;
| archived         | 仓库是否已归档              |&#13;
| private          | 仓库是否为私有              |&#13;
| fork             | 仓库是否为一个派生（fork）    |&#13;
。</description><guid isPermaLink="true">https://anaer.github.io/blog/post/pyGitHub.html</guid><pubDate>Thu, 19 Oct 2023 08:19:17 +0000</pubDate></item><item><title>循环叹息</title><link>https://anaer.github.io/blog/post/xun-huan-tan-xi.html</link><description>循环叹息（cyclic sighing）的步骤是，先缓慢吸气，使肺部扩张，再短促小吸一口气，最大程度让肺部充气，然后非常缓慢地呼出全部气体。</description><guid isPermaLink="true">https://anaer.github.io/blog/post/xun-huan-tan-xi.html</guid><pubDate>Mon, 16 Oct 2023 02:09:32 +0000</pubDate></item><item><title>Violentmonkey 脚本</title><link>https://anaer.github.io/blog/post/Violentmonkey%20-jiao-ben.html</link><description>## [暴力猴Violentmonkey](https://violentmonkey.github.io/)&#13;
&#13;
### [元数据块](https://violentmonkey.github.io/api/metadata-block/)&#13;
&#13;
```markdown&#13;
// ==UserScript==&#13;
// @name 标题&#13;
// @name:zh-CN 可以在变量名后增加区域信息:zh-CN 实现多语言国际化&#13;
// @namespace 命名空间 通过name和namespace确定唯一, 创建同名脚本时会提示冲突&#13;
// @description 描述&#13;
// @author 作者&#13;
// @version 1.0.2 版本信息 用于检查版本更新&#13;
// @match 匹配规则&#13;
// @exclude-match 排除规则&#13;
// @include 同@match 建议使用@match&#13;
// @exclude 同@exclude-match 建议使用@exclude-match&#13;
// @grant none 授权GM_* API&#13;
// @noframes 添加则表示脚本只在顶级文档中执行, 不在嵌套frame中执行&#13;
// @run-at       document-start 脚本执行时间&#13;
// @inject-into page 默认 确定脚本注入到哪个上下文中&#13;
// @icon 图标链接&#13;
// @require https://my.cdn.com/jquery.js 引入三方js&#13;
// @resource logo https://my.cdn.com/logo.png 引入三方资源, 脚本中通过GM_getResourceText和GM_getResourceURL访问&#13;
// @resource text https://my.cdn.com/some-text.txt&#13;
// @downloadURL 下载链接&#13;
// @supportURL 支持链接 用于问题反馈等&#13;
// @homepageURL 主页链接&#13;
// @unwarp 添加则表示脚本按原样注入页面的全局范围&#13;
// ==/UserScript==&#13;
```&#13;
&#13;
### [GM_* API接口](https://violentmonkey.github.io/api/gm/)&#13;
&#13;
-   [GM\_\*](https://violentmonkey.github.io/api/gm/#gm_)&#13;
    -   [GM\_info](https://violentmonkey.github.io/api/gm/#gm_info)&#13;
    -   [GM\_getValue](https://violentmonkey.github.io/api/gm/#gm_getvalue)&#13;
    -   [GM\_setValue](https://violentmonkey.github.io/api/gm/#gm_setvalue)&#13;
    -   [GM\_deleteValue](https://violentmonkey.github.io/api/gm/#gm_deletevalue)&#13;
    -   [GM\_listValues](https://violentmonkey.github.io/api/gm/#gm_listvalues)&#13;
    -   [GM\_addValueChangeListener](https://violentmonkey.github.io/api/gm/#gm_addvaluechangelistener)&#13;
    -   [GM\_removeValueChangeListener](https://violentmonkey.github.io/api/gm/#gm_removevaluechangelistener)&#13;
    -   [GM\_getResourceText](https://violentmonkey.github.io/api/gm/#gm_getresourcetext)&#13;
    -   [GM\_getResourceURL](https://violentmonkey.github.io/api/gm/#gm_getresourceurl)&#13;
    -   [GM\_addElement](https://violentmonkey.github.io/api/gm/#gm_addelement)&#13;
    -   [GM\_addStyle](https://violentmonkey.github.io/api/gm/#gm_addstyle)&#13;
    -   [GM\_openInTab](https://violentmonkey.github.io/api/gm/#gm_openintab)&#13;
    -   [GM\_registerMenuCommand](https://violentmonkey.github.io/api/gm/#gm_registermenucommand)&#13;
    -   [GM\_unregisterMenuCommand](https://violentmonkey.github.io/api/gm/#gm_unregistermenucommand)&#13;
    -   [GM\_notification](https://violentmonkey.github.io/api/gm/#gm_notification)&#13;
    -   [GM\_setClipboard](https://violentmonkey.github.io/api/gm/#gm_setclipboard)&#13;
    -   [GM\_xmlhttpRequest](https://violentmonkey.github.io/api/gm/#gm_xmlhttprequest)&#13;
    -   [GM\_download](https://violentmonkey.github.io/api/gm/#gm_download)&#13;
-   [GM.\*](https://violentmonkey.github.io/api/gm/#gm)&#13;
&#13;
### [DOM观察](https://violentmonkey.github.io/guide/observing-dom/)&#13;
&#13;
### [匹配规则](https://violentmonkey.github.io/api/matching/)&#13;
&#13;
![image](https://violentmonkey.github.io/static/5353fff61b7784074245599dfc3ebf63/a6d36/match.png)&#13;
。</description><guid isPermaLink="true">https://anaer.github.io/blog/post/Violentmonkey%20-jiao-ben.html</guid><pubDate>Thu, 28 Sep 2023 06:35:06 +0000</pubDate></item><item><title>苹果CMS</title><link>https://anaer.github.io/blog/post/ping-guo-CMS.html</link><description>## [苹果CMS](https://github.com/magicblack/maccms10)&#13;
&#13;
## 接口说明&#13;
&#13;
[Provide.php](https://github.com/magicblack/maccms10/blob/master/application/api/controller/Provide.php)&#13;
&#13;
### 列表&#13;
http://域名/api.php/provide/vod/?ac=list&#13;
&#13;
入参：&#13;
```&#13;
ac=list 查询列表 videolist 查询列表(全字段) detail 查询详情&#13;
t=类别ID&#13;
pg=页码&#13;
wd=搜索关键字&#13;
h=几小时内的数据&#13;
&#13;
isend=是否已完结 1: 已完结 0:未完结&#13;
year=查询年份 支持区间2022-2023&#13;
sort_direct=排序方向 目前按vod_time排序, 默认desc倒序, asc 正序&#13;
pagesize=单页数据量 最大限制100&#13;
```&#13;
&#13;
例如： &#13;
```&#13;
http://域名/api.php/provide/vod/?ac=list&amp;t=1&amp;pg=5 分类ID为1的列表数据第5页 &#13;
http://域名/api.php/provide/vod/?ac=detail&amp;ids=123,567 获取ID为123和567的数据信息 &#13;
http://域名/api.php/provide/vod/?ac=detail&amp;h=24 获取24小时内更新数据信息 &#13;
```&#13;
&#13;
## 搜索资源&#13;
## 使用关键词&#13;
```&#13;
inurl:/api.php/provide/vod&#13;
```&#13;
&#13;
[Google搜索](https://www.google.com/search?q=inurl%3A%2Fapi.php%2Fprovide%2Fvod&amp;ie=UTF-8)&#13;
&#13;
## 相关链接&#13;
&#13;
[接口说明](https://github.com/magicblack/maccms10/wiki/%E5%85%A5%E5%BA%93%E6%8E%A5%E5%8F%A3%E8%AF%B4%E6%98%8E)&#13;
&#13;
[字段说明](https://github.com/magicblack/maccms10/wiki/%E6%A0%87%E7%AD%BE%E6%96%87%E6%A1%A3)。</description><guid isPermaLink="true">https://anaer.github.io/blog/post/ping-guo-CMS.html</guid><pubDate>Fri, 08 Sep 2023 12:29:10 +0000</pubDate></item></channel></rss>